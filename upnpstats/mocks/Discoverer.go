// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	goupnp "github.com/huin/goupnp"
	mock "github.com/stretchr/testify/mock"

	upnpstats "github.com/clambin/upnp-exporter/upnpstats"

	url "net/url"
)

// Discoverer is an autogenerated mock type for the Discoverer type
type Discoverer struct {
	mock.Mock
}

// DiscoverDevices provides a mock function with given fields: target
func (_m *Discoverer) DiscoverDevices(target string) ([]goupnp.MaybeRootDevice, error) {
	ret := _m.Called(target)

	var r0 []goupnp.MaybeRootDevice
	if rf, ok := ret.Get(0).(func(string) []goupnp.MaybeRootDevice); ok {
		r0 = rf(target)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]goupnp.MaybeRootDevice)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(target)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetNetworkStats provides a mock function with given fields: router
func (_m *Discoverer) GetNetworkStats(router *url.URL) (upnpstats.Stats, error) {
	ret := _m.Called(router)

	var r0 upnpstats.Stats
	if rf, ok := ret.Get(0).(func(*url.URL) upnpstats.Stats); ok {
		r0 = rf(router)
	} else {
		r0 = ret.Get(0).(upnpstats.Stats)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*url.URL) error); ok {
		r1 = rf(router)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
